Installation
==============

    cp Keys.example Keys
    # Set your access keys
    # edit kittysnap.cron user path
    # Set camdir created.
    make build
    crontab kittysnap.cron

Create an enviorment file so I dont need to set camdir created.


Infrastructure
==================

S3 as my image storage layer.
I take in an image every hour.
Upload it to an S3 bucket.
Need to report to some datastore (AWS Simple DB [SDB]) (Use Amazon DynamoDB)
    image id??? / date_taken
    SDB - index/Domain/File/Table Select DESC timestamp.
Can the above reporting be done using only s3?
A tiny little server to report all images_dates in data store.
    Paginate to 10 per page.
[Expensive - Make a thumbnail for each image?]

I can bucket by prefix and delimiter
201605/
Year Month/ folders.


v0:
* Build mockable skeleton and offline sources for everything.
  x Use json flatfile as DB
  x Use test image and delay as image.
  x Serve static html.
  * Mock the go skeleton (upload, camera)
  * Make the go timer.
  * Make ajax request to local source (go server i guess)
  * Add tests
* Upload Image to s3
* Implement Uploadedr module.
* Figure out how to make a good timer in Go for capturing images.
* Add s3object entry to dyanmodb with timestamp
* Set up secondary index for date created in dyamodb.
* Query Simple database for s3objects by timestamp
* Return query results to go and parse.
* Bootstrap based simple html page.
* Make static site with s3 serving webpage.
* Fill in DOM via javascript ajax call rather than static html serve.
    knocks out need for go server to serve content.
* Put up Basic Auth
* Route 53 from a domain to static page.

* Dyamodb vs postgres vs mongo

x Capture images

URLs: v0

/ List all images by date: Paginated 20
  Click on image link to see images

v1: 
* Show thumbnails instead of image links.
* List month range with total (GROUP BY year-month)
* Add nice css and design.
* EC2 instance for serving basic Go template.
* Create a cleaner interface surrounding business logic and AWS integration.


Pass in location via cmd line. 
tmp or var directoy?
Create a temp directory if one does not exist in var file. > /var/ks/savelocation
Write path written to log.





Cron Job
=============
* Write a 1-time task to take a pic, upload to s3, write to db.
* Call it with cron every hour.
* Test file write every minute.



Lazy Log
=================
Write images to temp directory savelocation.txt
Write imagenames written to upload_queue.txt
Attempt to upload all files in queue.txt
*  On success: Move line from queue.txt to sent.txt
*  On failure: Do nothing.
* Daily: Remove files from sent.txt along with the file itself.
This provides easy auditing for files that dont get uploaded.



Immediate
==================
Pass paths in via env, provide default.

Rename s3 and get up and running on Mac. hourly.

